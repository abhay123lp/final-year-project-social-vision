<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:valueObjects="valueObjects.*"
			   xmlns:dbpythonscriptswebservices="services.dbpythonscriptswebservices.*"
			   width="1307" height="1326" minWidth="955" minHeight="600"
			   creationComplete="initApp()">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			private var timer:Timer;

			[Bindable] public var scriptStatus:String = "Stopped";
			[Bindable] public var scriptProgress:String = "Stopped";
			[Bindable] public var scriptName:String;
			[Bindable] public var classNameOne:String;
			[Bindable] public var classNameTwo:String;
			
			protected function initApp():void 
			{
				startPollingScriptStatus();
			}
			
			public function stopApp():void 
			{
				timer.stop();
			}
			
			protected function form_creationCompleteHandler(event:FlexEvent):void
			{
				getAllBasicClassifiersScriptInputsResult.token = dBPythonScriptsWebServices.getAllBasicClassifiersScriptInputs(scriptName);
			}
			
			
			protected function button_clickHandler(event:MouseEvent):void
			{
				updateBasicClassifierScriptInputsResult.token = dBPythonScriptsWebServices.updateBasicClassifierScriptInputs
					(scriptName, remove_short_wordsTextInput.text.toString(), remove_stop_wordsTextInput.text.toString(), 
						remove_low_info_wordsTextInput.text.toString(),	num_of_inf_wordsTextInput.text.toString(), use_bigramsTextInput.text.toString(), 
						num_of_most_intersting_features_to_showTextInput.text.toString(), num_of_training_tweetsTextInput.text.toString(), 
						num_of_test_tweetsTextInput.text.toString());
			}
			
			protected function getAllBasicClassifiersScriptInputsResult_resultHandler(event:ResultEvent):void
			{
				basicClassifierScriptInputs = getAllBasicClassifiersScriptInputsResult.lastResult as BasicClassifierScriptInputs;
			}
			
			protected function updateBasicClassifierScriptInputs(script_name:String, remove_short_words:String, remove_stop_words:String, remove_low_info_words:String, num_of_inf_words:String, use_bigrams:String, num_of_most_intersting_features_to_show:String, num_of_training_tweets:String, num_of_test_tweets:String):void
			{
				updateBasicClassifierScriptInputsResult.token = dBPythonScriptsWebServices.updateBasicClassifierScriptInputs(script_name, remove_short_words, remove_stop_words, remove_low_info_words, num_of_inf_words, use_bigrams, num_of_most_intersting_features_to_show, num_of_training_tweets, num_of_test_tweets);
			}
			
			protected function updateBasicClassifierScriptInputsResult_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				getAllBasicClassifiersScriptInputsResult.token = dBPythonScriptsWebServices.getAllBasicClassifiersScriptInputs(scriptName);
			}
			
			protected function form2_creationCompleteHandler(event:FlexEvent):void
			{
				getAllClassifiersScriptOutputsResult.token = dBPythonScriptsWebServices.getAllClassifiersScriptOutputs(scriptName);
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				startNLTKTrainClassifier(scriptName);
			}
			
			
			protected function startNLTKTrainClassifier(script_name:String):void
			{
				resetOutputValues();
				startNLTKTrainClassifierResult.token = dBPythonScriptsWebServices.startNLTKTrainClassifier(script_name);
			}
			
			protected function startNLTKTrainClassifierResult_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			private function pollScriptStatus(evt:TimerEvent):void
			{
				getPythonScriptStatus(scriptName);
			}
			
			
			protected function getPythonScriptStatus(script_name:String):void
			{
				getPythonScriptStatusResult.token = dBPythonScriptsWebServices.getPythonScriptStatus(script_name);
			}
			
			private function startPollingScriptStatus():void {
				timer = new Timer(200);
				timer.addEventListener(TimerEvent.TIMER, pollScriptStatus);
				timer.start();
			}
			
			protected function getPythonScriptStatusResult_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				scriptStatus = getPythonScriptStatusResult.lastResult.status;
				scriptProgress = getPythonScriptStatusResult.lastResult.progress;
				
				if(scriptStatus == "Stopped")
				{
					getAllClassifiersScriptOutputsResult.token = dBPythonScriptsWebServices.getAllClassifiersScriptOutputs(scriptName);
				}
				else
				{
					resetOutputValues();
				}
			}
			
			private function resetOutputValues():void
			{
				accuracyLabel.text = "-";
				one_precisionLabel.text = "-";
				one_recallLabel.text = "-";
				two_precisionLabel.text = "-";
				two_recallLabel.text = "-";
				most_informative_featuresLabel.text = "Training the NLTK naive bayes classifier"
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<valueObjects:BasicClassifierScriptInputs id="basicClassifierScriptInputs"/>
		<dbpythonscriptswebservices:DBPythonScriptsWebServices id="dBPythonScriptsWebServices"
															   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
															   />
		<s:CallResponder id="getAllBasicClassifiersScriptInputsResult"
						 result="getAllBasicClassifiersScriptInputsResult_resultHandler(event)"/>
		<s:CallResponder id="updateBasicClassifierScriptInputsResult" result="updateBasicClassifierScriptInputsResult_resultHandler(event)"/>
		<valueObjects:ClassifierScriptOutputs id="classifierScriptOutputs"/>
		<s:CallResponder id="getAllClassifiersScriptOutputsResult"
						 result="classifierScriptOutputs = getAllClassifiersScriptOutputsResult.lastResult as ClassifierScriptOutputs"/>
		<s:CallResponder id="startNLTKTrainClassifierResult" result="startNLTKTrainClassifierResult_resultHandler(event)"/>
		<s:CallResponder id="getPythonScriptStatusResult" result="getPythonScriptStatusResult_resultHandler(event)" />
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Form id="form" x="10" y="103" creationComplete="form_creationCompleteHandler(event)"
			defaultButton="{button}">
		<s:FormItem label="Remove short words">
			<s:TextInput id="remove_short_wordsTextInput"
						 text="{basicClassifierScriptInputs.remove_short_words}"/>
		</s:FormItem>
		<s:FormItem label="Remove stop words">
			<s:TextInput id="remove_stop_wordsTextInput"
						 text="{basicClassifierScriptInputs.remove_stop_words}"/>
		</s:FormItem>
		<s:FormItem label="Remove low info words">
			<s:TextInput id="remove_low_info_wordsTextInput"
						 text="{basicClassifierScriptInputs.remove_low_info_words}"/>
		</s:FormItem>
		<s:FormItem label="Num of inf words">
			<s:TextInput id="num_of_inf_wordsTextInput"
						 text="{basicClassifierScriptInputs.num_of_inf_words}"/>
		</s:FormItem>
		<s:FormItem label="Use bigrams">
			<s:TextInput id="use_bigramsTextInput" text="{basicClassifierScriptInputs.use_bigrams}"/>
		</s:FormItem>
		<s:FormItem label="Num of most informative features">
			<s:TextInput id="num_of_most_intersting_features_to_showTextInput"
						 text="{basicClassifierScriptInputs.num_of_most_intersting_features_to_show}"/>
		</s:FormItem>
		<s:FormItem label="Num of training tweets">
			<s:TextInput id="num_of_training_tweetsTextInput"
						 text="{basicClassifierScriptInputs.num_of_training_tweets}"/>
		</s:FormItem>
		<s:FormItem label="Num of test tweets">
			<s:TextInput id="num_of_test_tweetsTextInput"
						 text="{basicClassifierScriptInputs.num_of_test_tweets}"/>
		</s:FormItem>
		<s:Button id="button" width="105" label="Update Values" click="button_clickHandler(event)"/>
	</s:Form>
	<s:Form id="form2" x="887" y="112" width="309" height="236"
			creationComplete="form2_creationCompleteHandler(event)">
		<s:FormItem label="Accuracy:" fontSize="17">
			<s:Label id="accuracyLabel" text="{classifierScriptOutputs.accuracy}"/>
		</s:FormItem>
		<s:FormItem label="{classNameOne} precision:" fontSize="17">
			<s:Label id="one_precisionLabel" text="{classifierScriptOutputs.one_precision}"/>
		</s:FormItem>
		<s:FormItem label="{classNameOne} recall:" fontSize="17">
			<s:Label id="one_recallLabel" text="{classifierScriptOutputs.one_recall}"/>
		</s:FormItem>
		<s:FormItem label="{classNameTwo} precision:" fontSize="17">
			<s:Label id="two_precisionLabel" text="{classifierScriptOutputs.two_precision}"/>
		</s:FormItem>
		<s:FormItem label="{classNameTwo} recall:" fontSize="17">
			<s:Label id="two_recallLabel" text="{classifierScriptOutputs.two_recall}"/>
		</s:FormItem>
	</s:Form>
	<s:TextArea id="most_informative_featuresLabel" x="433" y="126" width="443" height="401"
			 text="{classifierScriptOutputs.most_informative_features}"/>
	<s:FormItem x="419" y="101" label="Most_informative_features" textAlign="left">
	</s:FormItem>
	<s:Button x="913" y="356" width="345" height="141" label="Train Algorithm"
			  click="button1_clickHandler(event)" fontSize="18" fontWeight="bold"/>
	<s:Label id="titleLabelScriptStatus" x="435" y="558" width="246" height="23" fontSize="24"
			 fontWeight="bold" text="Script Status"/>
	<s:Label id="labelStatus" x="435" y="589" width="806" height="47" fontSize="20" text="{scriptStatus}"/>
	<s:Label id="titleLabelScriptProgress" x="435" y="625" width="246" height="23" fontSize="24"
			 fontWeight="bold" text="Script Progress"/>
	<s:Label id="labelProgress" x="433" y="664" width="806" height="47" fontSize="20" text="{scriptProgress}"/>
	<s:Label id="inputparametersTitleLabel" x="15" y="63" width="458" height="37" fontSize="30"
			 text="NLTK Settings "/>
	<s:Label id="inputparametersTitleLabel0" x="431" y="65" width="458" height="37" fontSize="30"
			 text="Script Output "/>
	<s:Label x="16" y="10" width="927" height="55" fontSize="36" fontWeight="bold"
			 text="{scriptName}"/>
	
</s:Group>
